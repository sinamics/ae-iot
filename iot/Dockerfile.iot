# syntax=docker/dockerfile:1

FROM --platform=$TARGETPLATFORM python:3.10-slim-buster

WORKDIR /app
ENV TZ=Europe/Oslo

COPY install/requirements.txt requirements.txt
RUN apt-get update -y
RUN apt-get install -y \
                    gcc build-essential \
                    cron \
                    nano
                    # rpi.gpio



RUN pip3 install -r requirements.txt
COPY ./src .
COPY ./config.yaml .
COPY ./install ./install
COPY ./install/install.sh .
COPY ./install/entrypoint.sh .

RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
RUN ./install.sh

ENTRYPOINT [ "/app/entrypoint.sh" ]
CMD [ "cron", "&&", "tail", "-f", "/var/log/cron.log"]

# MULTIARCH BUILD #
#
# docker buildx create --name iot
# docker buildx use iot
# docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
# docker run --privileged --rm tonistiigi/binfmt --install all
# 